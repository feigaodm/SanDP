#!/usr/bin/env python

import argparse
import os
import sys
import sandp
from sandp import waveform
from sandp import rawdata
from sandp import peakproperty
from sandp import calvariables

def main():
    parser = argparse.ArgumentParser()
    
    ## -------------->
    parser.add_argument(
    '--process',
    dest='processing',
    action='store_true',
    help='start processing rawdata')
    ## -------------->

    ## -------------->
    parser.add_argument(
    '--processSPE',
    dest='processingSPE',
    action='store_true',
    help='start processing rawdata (SPE)')
    ## -------------->


    ## version:
    parser.add_argument('--version', action = 'store_true', help = "latest version")
    
    ## wavefom:
    parser.add_argument(
    '--waveform',
    dest='generate_wf',
    action='store_true',
    help='generate waveform from raw data')
    
    ## input file
    parser.add_argument(
    '--input',
    action='store',
    dest='raw_data',
    help='name of the raw data',
    type=str)

    ## path of the processed file
    parser.add_argument(
    '--outpath',
    action='store',
    dest='outdata_path',
    help='the location that save the processed file',
    type=str)
    
    ## event ID
    parser.add_argument(
        '--event', 
        action = 'store', 
        dest = 'eventid',
        help = "which event you want to see?",
        type = int)

    parser.add_argument('--savepath', help="where do you want to save the waveform?", type=str, default=False)

    ### =====================>
    ### =====================>
    args = parser.parse_args()

    if args.version:
        print (sandp.__version__)
        exit()
        
    ###################
    ## show waveform
    ###################
    
    if (args.generate_wf):
        waveform.drawWF(args.eventid, args.raw_data, args.savepath)

    ###################
    ## start processing
    ###################
    
    if (args.processing):
        calvariables.process(args.raw_data, args.outdata_path)

    if (args.processingSPE):
        calvariables.processSPE(args.raw_data, args.outdata_path)


    
if __name__ == '__main__':
    main()